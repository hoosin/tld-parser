package main

import (
	"bufio"
	"fmt"
	"os"
	"strings"
	"text/template"
)

const (
	publicSuffixListPath = "data/public_suffix_list.dat"
	outputFilePath       = "parser/public_suffix_list.go"
)

type TemplateData struct {
	PublicSuffixList  []string
	PrivateSuffixList []string
}

func main() {
	publicSuffixes := make([]string, 0)
	privateSuffixes := make([]string, 0)

	file, err := os.Open(publicSuffixListPath)
	if err != nil {
		fmt.Fprintf(os.Stderr, "Error opening public suffix list file: %v\n", err)
		os.Exit(1)
	}
	defer file.Close()

	scanner := bufio.NewScanner(file)
	isPrivateSection := false
	for scanner.Scan() {
		line := scanner.Text()

		if strings.Contains(line, "BEGIN PRIVATE DOMAINS") {
			isPrivateSection = true
			continue
		}

		trimmedLine := strings.TrimSpace(line)
		if trimmedLine == "" || strings.HasPrefix(trimmedLine, "//") {
			continue
		}

		// NOTE: This generator currently ignores wildcard rules (e.g., *.uk)
		// and exception rules (e.g., !metro.police.uk).
		// A complete implementation would require more sophisticated parsing logic.
		if strings.Contains(trimmedLine, "*") || strings.HasPrefix(trimmedLine, "!") {
			continue
		}

		if isPrivateSection {
			privateSuffixes = append(privateSuffixes, trimmedLine)
		} else {
			publicSuffixes = append(publicSuffixes, trimmedLine)
		}
	}

	if err := scanner.Err(); err != nil {
		fmt.Fprintf(os.Stderr, "Error reading public suffix list file: %v\n", err)
		os.Exit(1)
	}

	tmpl := template.Must(template.New("tldlist").Parse(templateContent))

	outputFile, err := os.Create(outputFilePath)
	if err != nil {
		fmt.Fprintf(os.Stderr, "Error creating output file: %v\n", err)
		os.Exit(1)
	}
	defer outputFile.Close()

	data := TemplateData{
		PublicSuffixList:  publicSuffixes,
		PrivateSuffixList: privateSuffixes,
	}

	if err := tmpl.Execute(outputFile, data); err != nil {
		fmt.Fprintf(os.Stderr, "Error executing template: %v\n", err)
		os.Exit(1)
	}

	fmt.Println("Generated parser/public_suffix_list.go successfully.")
}

const templateContent = `package parser

// This file is generated by cmd/generate/main.go. DO NOT EDIT.

var publicSuffixList = map[string]bool{
{{- range .PublicSuffixList }}
	"{{ . }}": true,
{{- end }}
{{- range .PrivateSuffixList }}
	"{{ . }}": true, // Private suffixes are also considered public for matching purposes
{{- end }}
}

var privateSuffixList = map[string]bool{
{{- range .PrivateSuffixList }}
	"{{ . }}": true,
{{- end }}
}
`
